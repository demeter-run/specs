syntax = "proto3";

package demeter.ops.v1alpha;

message KeyValue {
  string key = 1;
  bytes value = 2;
}

message FetchKeyValueRequest {
  string worker_id = 1;
  optional string key = 2;
  optional uint32 page = 3;
  optional uint32 page_size = 4;
}
message FetchKeyValueResponse {
  uint32 total_records = 1;
  repeated KeyValue records = 2;
}

message UpdateKeyValueRequest {
  string worker_id = 1;
  string key = 2;
  bytes value = 3;
}
message UpdateKeyValueResponse { 
  KeyValue updated = 1; 
}

message DeleteKeyValueRequest {
  string worker_id = 1;
  string key = 2;
}
message DeleteKeyValueResponse {}

service KeyValueService {
  rpc FetchKeyValue(FetchKeyValueRequest) returns (FetchKeyValueResponse);
  rpc UpdateKeyValue(UpdateKeyValueRequest) returns (UpdateKeyValueResponse);
  rpc DeleteKeyValue(DeleteKeyValueRequest) returns (DeleteKeyValueResponse);
}

message Log {
  uint32 timestamp = 2;
  string level = 4;
  string message = 5;
  string context = 6;
}

enum Direction {
  Prev = 0;
  Next = 1;
}

message FetchLogsRequest {
  string worker_id = 1;
  uint32 cursor = 2;
  optional Direction direction = 3;
  optional uint32 limit = 4;
}

message FetchLogsResponse {
  repeated Log records = 2;
}

service LogsService {
  rpc FetchWindow(FetchLogsRequest) returns (FetchLogsResponse);
}


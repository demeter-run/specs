syntax = "proto3";

package demeter.ops.v1alpha;

message CreateProjectRequest {
  string name = 1; 
}
message CreateProjectResponse {
  string id = 1;
  string name = 2; 
  string namespace = 3; 
}

message CreateProjectSecretRequest {
  string name = 1; 
  string project_id = 2;
}
message CreateProjectSecretResponse {
  string id = 1;
  string name = 2; 
  string key = 3;
}

message UpdateProjectRequest {
  string id = 1;
  string name = 2; 
}
message UpdateProjectResponse {
  Project updated = 1;
}

message Project {
  string id = 1;
  string name = 2; 
  string namespace = 3; 
  string status = 4; 
  string created_at = 5; 
  string updated_at = 6; 
}
message FetchProjectsRequest {
  optional uint32 page = 1;
  optional uint32 page_size = 2;
}
message FetchProjectsResponse {
  repeated Project records = 2;
}

message DeleteProjectRequest {
  string id = 1; 
}
message DeleteProjectResponse {}

message Payment {
  string id = 1;
  string project_id = 2;
  string provider = 3;
  string provider_id = 4;
  optional string subscription_id = 5;
}

message CreatePaymentRequest {
  string project_id = 1;
  string provider = 2;
  string provider_id = 3;
  optional string subscription_id = 4;
}
message CreatePaymentResponse {
  repeated Payment records = 1;
}

message FetchPaymentRequest {
  string project_id = 1;
}
message FetchPaymentResponse {
  repeated Payment records = 1;
}

service ProjectService {
  rpc FetchProjects(FetchProjectsRequest) returns (FetchProjectsResponse);
  rpc CreateProject(CreateProjectRequest) returns (CreateProjectResponse);
  rpc UpdateProject(UpdateProjectRequest) returns (UpdateProjectResponse);
  rpc DeleteProject(DeleteProjectRequest) returns (DeleteProjectResponse);

  rpc CreateProjectSecret(CreateProjectSecretRequest) returns (CreateProjectSecretResponse);

  rpc CreatePayment(CreatePaymentRequest) returns (CreatePaymentResponse);
  rpc FetchPayment(FetchPaymentRequest) returns (FetchPaymentResponse);
}

